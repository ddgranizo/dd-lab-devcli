
using [[InterfacesNamespace]];

namespace [[ImplementationsNamespace]]
{
    public class Delete[[EntityName]]Service : IDelete[[EntityName]]Service
    {
        private readonly I[[EntityName]]Repository repository;

        public Delete[[EntityName]]Service(I[[EntityName]]Repository repository)
        {
            this.repository = repository ?? throw new ArgumentNullException(nameof(repository));
        }

        public async Task<ServiceResponse> Execute(Guid data)
        {
            try
            {
                await repository.Delete(data);
                return new ServiceResponse().Ok();
            }
            catch (Exception ex)
            {
                return new ServiceResponse().Exception(ex);
            }
        }
    }
}