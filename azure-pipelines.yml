# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  solutionTarget: 'Main/dd-lab-devcli.sln'
  testResultsPath: 'TestResults/'
  coverageFolderPath : '/TestResults/Coverage/'
  buildConfiguration: 'Debug'



steps:
- task: DotNetCoreCLI@2
  displayName: 'Restoring packages...'
  inputs:
    command: restore
    projects: '**/*.sln'
- task: DotNetCoreCLI@2
  displayName: 'Building...'
  inputs:
    command: build
    projects: '**/*.sln'
    configuration: $(buildConfiguration)


- task: CmdLine@2
  inputs:
    script: |
      mkdir '$(Agent.BuildDirectory)\results'
      dotnet test $(solutionTarget) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput='$(Agent.BuildDirectory)\results' 
  displayName: 'Unit tests'



#- task: DotNetCoreCLI@2
#  displayName: 'Executing tests...'
#  inputs:
#    command: test
#    projects: '**/*.sln'
#    publishTestResults: true
#    configuration: $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)\TestResults\Coverage\

- task: PublishTestResults@2
  inputs:
    testResultsFormat: XUnit
    testResultsFiles: '**/*.trx'
    #searchFolder: '$(System.DefaultWorkingDirectory)'
    #mergeTestResults: false # Optional
    #failTaskOnFailedTests: false # Optional
    #testRunTitle: # Optional
    #buildPlatform: # Optional
    #buildConfiguration: # Optional
    #publishRunAttachments: true # Optional

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Agent.BuildDirectory)results/results.cobertura.xml